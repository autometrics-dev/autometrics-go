name: Release

on:
  push:
    tags:
      - v**

jobs:
  build:
    name: 'Build Assets'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [linux_amd64, windows_amd64, darwin_amd64, darwin_arm64]
        compress: [tar]
        include:
          - build: linux_amd64
            goos: linux
            goarch: amd64
            ext: ''
          - build: windows_amd64
            goos: windows
            goarch: amd64
            ext: '.exe'
            compress: zip
          - build: darwin_amd64
            goos: darwin
            goarch: amd64
            ext: ''
          - build: darwin_arm64
            goos: darwin
            goarch: arm64
            ext: ''
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true
      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build cmd/autometrics/main.go
          mv main${{ matrix.ext }} autometrics${{ matrix.ext }}

      - name: Pack (Tar)
        if: matrix.compress == 'tar'
        run: |
          tar -c -f autometrics-${{ matrix.build }}.tar.gz -v -z autometrics${{ matrix.ext }}
      - name: Upload (Tar)
        if: matrix.compress == 'tar'
        uses: actions/upload-artifact@v3
        with:
          name: autometrics ${{ matrix.build }}
          path: autometrics-${{ matrix.build }}.tar.gz
          if-no-files-found: error
          retention-days: 1

      - name: Pack (Zip)
        if: matrix.compress == 'zip'
        run: |
          zip autometrics-${{ matrix.build }}.zip -v -z autometrics${{ matrix.ext }}
      - name: Upload (Zip)
        if: matrix.compress == 'zip'
        uses: actions/upload-artifact@v3
        with:
          name: autometrics ${{ matrix.build }}
          path: autometrics-${{ matrix.build }}.zip
          if-no-files-found: error
          retention-days: 1

  add_assets:
    name: 'Add Assets'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Fetch Linux (AMD64) build
        uses: actions/download-artifact@v3
        with:
          name: autometrics linux_amd64
      - name: Fetch Windows (AMD64) build
        uses: actions/download-artifact@v3
        with:
          name: autometrics windows_amd64
      - name: Fetch Darwin (AMD64) build
        uses: actions/download-artifact@v3
        with:
          name: autometrics darwin_amd64
      - name: Fetch Darwin (ARM64) build
        uses: actions/download-artifact@v3
        with:
          name: autometrics darwin_arm64
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
